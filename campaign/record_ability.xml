<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the license.html file included with this distribution for 
  attribution and copyright information.
-->

<root>
	<windowclass name="ability" copy="record_window">
		<minimize>minimized_item</minimize>
	</windowclass>
	
	<windowclass name="ability_main">
		<margins control="0,35,0,2" />
		<script file="campaign/scripts/ability_main.lua" />
		<sheetdata>
			<anchor_column name="columnanchor" />
		<!-- DESCRIPTION -->
      	<ft_columnh name="notes" copy="record_window_text" />

		<!-- KEYWORDS -->
		<line_column name="divider1" />
		<label_column name="keywords_label">
			<static textres="ability_label_keywords" />
		</label_column>
		<string_columnh name="keywords" />
      	<label_column name="type_label">
			<static textres="ability_label_type" />
		</label_column>
		<string_columnh name="type" />
      	<label_column name="distance_label">
			<static textres="ability_label_distance" />
		</label_column>
		<string_columnh name="distance" />
      	<label_column name="target_label">
			<static textres="ability_label_target" />
		</label_column>
		<string_columnh name="target" />

		<!-- POWER ROLL -->
		<line_column name="divider2" />
	
		<label_column name="characteristic_label">
			<static textres="ability_label_powerrollplus" />
		</label_column>
		<string_columnh name="characteristic" source="ability.characteristic"/>

		<label_column name="tier1_label">
			<static textres="ability_label_tier1" />
		</label_column>
		<string_columnh name="tier1" source="tier1"/>

		<label_column name="tier2_label">
			<static textres="ability_label_tier2" />
		</label_column>
		<string_columnh name="tier2" source="tier2" />

		<label_column name="tier3_label">
			<static textres="ability_label_tier3" />
		</label_column>
		<string_columnh name="tier3" source="tier3" />

		<!-- OTHER -->
		<line_column name="divider3" />
		<label_column name="trigger_label">
			<static textres="ability_label_trigger" />
		</label_column>
		<string_columnh name="trigger">
			<delaykeyupdate />
		</string_columnh>
		<label_column name="effect_label">
			<static textres="ability_label_effect" />
		</label_column>
		<string_columnh name="effect" source="ability.effect">
			<delaykeyupdate />
		</string_columnh>
		<label_column name="special_label">
			<static textres="ability_label_special" />
		</label_column>
		<string_columnh name="special">
			<delaykeyupdate />
		</string_columnh>

		<!-- CLASS SUBCLASS TAGS -->
		<line_column name="divider4" />
		<label_column name="cost_label">
			<static textres="ability_label_cost" />
		</label_column>
		<string_columnh name="cost">
			<delaykeyupdate />
		</string_columnh>
		<label_column name="class_label">
			<static textres="ability_label_class" />
		</label_column>
		<string_columnh name="class">
			<delaykeyupdate />
		</string_columnh>
		<label_column name="subclass_label">
			<static textres="ability_label_subclass" />
		</label_column>
		<string_columnh name="subclass">
			<delaykeyupdate />
		</string_columnh>
		<label_column name="abilitytype_label">
			<static textres="ability_label_abilitytype" />
		</label_column>
		<string_columnh name="abilitytype">
			<delaykeyupdate />
		</string_columnh>

				<!-- // power roll button -->
		<button_roll name="button_roll">
			<anchored to="columnanchor" width="30" height="30">
				<top offset="-30" />
				<left anchor="right" relation="relative" offset="0" />
			</anchored>
			<tooltip textres="tooltip_pr" />
			<script>	
				function action(draginfo)
				local nodeWin = window.getDatabaseNode();
				local characteristic = DB.getValue(nodeWin, "ability.characteristic");
				local effect = DB.getValue(nodeWin, "ability.effect");
				local tier1Result = DB.getValue(nodeWin, "tier1");
				local tier2Result = DB.getValue(nodeWin, "tier2");
				local tier3Result = DB.getValue(nodeWin, "tier3");
				local rActor = ActorManager.resolveActor(window.getDatabaseNode());
				local nodePC = ActorManager.getCreatureNode(rActor);
					local rRoll = { 
						sType = "dice", 
						sDesc = "(Power Roll + " .. characteristic .. ")", 
						aDice = { "d10", "d10" },
						nMod = characteristic,
						t1 = tier1Result,
						t2 = tier2Result,
						t3 = tier3Result;
						effect = effect;
					};
					ActionsManager2.encodeDesktopMods(rRoll);
					ActionsManager.performAction(draginfo, rActor, rRoll);
					return true;
				end
				
				function onDragStart(button, x, y, draginfo)
					return action(draginfo);
				end

				function onButtonPress()
					return action();
				end
			</script>
		</button_roll>	

		</sheetdata>
	</windowclass>
</root>